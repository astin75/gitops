name: GitOps Deploy

on:
  push:
    branches:
      - dev
      - prod
    paths:
      - 'app/**'
      - '.github/workflows/gitops-deploy.yml'

env:
  DOCKER_REGISTRY: astin75

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'app/frontend/**'
            backend:
              - 'app/backend/**'

  build-frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate image tag
        id: tag
        run: |
          TAG=$(date +%Y%m%d%H)
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./app/frontend
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/visitor-frontend:${{ steps.tag.outputs.TAG }}
            ${{ env.DOCKER_REGISTRY }}/visitor-frontend:${{ github.ref_name }}
            ${{ env.DOCKER_REGISTRY }}/visitor-frontend:latest

      - name: Update deployment manifests
        env:
          TAG: ${{ steps.tag.outputs.TAG }}
        run: |
          # Configure git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Update appropriate environment
          if [ "${{ github.ref_name }}" == "dev" ]; then
            sed -i "s|image: ${{ env.DOCKER_REGISTRY }}/visitor-frontend:[^ ]*|image: ${{ env.DOCKER_REGISTRY }}/visitor-frontend:${TAG}|g" applications/dev/frontend/deployment.yaml
          elif [ "${{ github.ref_name }}" == "prod" ]; then
            sed -i "s|image: ${{ env.DOCKER_REGISTRY }}/visitor-frontend:[^ ]*|image: ${{ env.DOCKER_REGISTRY }}/visitor-frontend:${TAG}|g" applications/prod/frontend/deployment.yaml
          fi
          
          # Commit and push
          git add applications/*/frontend/deployment.yaml
          git commit -m "chore: update frontend image to ${TAG} [skip ci]" || echo "No changes to commit"
          git pull --rebase
          git push

  build-backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT || github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate image tag
        id: tag
        run: |
          TAG=$(date +%Y%m%d%H)
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./app/backend
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/visitor-backend:${{ steps.tag.outputs.TAG }}
            ${{ env.DOCKER_REGISTRY }}/visitor-backend:${{ github.ref_name }}
            ${{ env.DOCKER_REGISTRY }}/visitor-backend:latest

      - name: Update deployment manifests
        env:
          TAG: ${{ steps.tag.outputs.TAG }}
        run: |
          # Configure git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Update appropriate environment
          if [ "${{ github.ref_name }}" == "dev" ]; then
            sed -i "s|image: ${{ env.DOCKER_REGISTRY }}/visitor-backend:[^ ]*|image: ${{ env.DOCKER_REGISTRY }}/visitor-backend:${TAG}|g" applications/dev/backend/deployment.yaml
          elif [ "${{ github.ref_name }}" == "prod" ]; then
            sed -i "s|image: ${{ env.DOCKER_REGISTRY }}/visitor-backend:[^ ]*|image: ${{ env.DOCKER_REGISTRY }}/visitor-backend:${TAG}|g" applications/prod/backend/deployment.yaml
          fi
          
          # Commit and push
          git add applications/*/backend/deployment.yaml
          git commit -m "chore: update backend image to ${TAG} [skip ci]" || echo "No changes to commit"
          git pull --rebase
          git push